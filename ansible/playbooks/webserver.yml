- name: Deploy some server
  hosts: localhost
  become: no
  remote_user: ec2-user
  vars_files:
  - ../config/aws.yml
  - ../config/vpc-gateway.yml
  tasks:
    - name: Get latest AMI ID
      command: ../util/get-latest-ami.sh
      register: latestami

    - debug: var=latestami.stdout

    - name: Create instances
      include_role: 
        name: simple-provision
      vars: 
        simple_provision_ami_id: "{{ latestami.stdout }}"
        simple_provision_instance_profile: EC2FULL
        simple_provision_tags: 
          Name: webserver
        simple_provision_security_groups: ['default','allow_ssh','web_from_alb']
        simple_provision_instance_type: t2.micro
        simple_provision_subnet_id: "{{ subnet_a }}"
        simple_provision_user_data: |
          #!/bin/bash
            echo "hellp"
            yum update -y
            yum install -y httpd.x86_64
            systemctl start httpd.service
            systemctl enable httpd.service
            echo "Hello World from $(hostname -f)" > /var/www/html/index.html
    
    - fail: 

    - name: Create instance
      ec2:
        image: "{{ latestami.stdout }}"
        instance_profile_name: EC2FULL
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        vpc_subnet_id: subnet-06221544c996c7042
        instance_tags:
          Name: custom
        groups: ['default', 'allow_ssh', 'web_from_alb']
        instance_type: t2.micro
        wait: yes
        user_data: |
          #!/bin/bash
          echo "hellp"
          yum update -y
          yum install -y httpd.x86_64
          systemctl start httpd.service
          systemctl enable httpd.service
          echo "Hello World from $(hostname -f)" > /var/www/html/index.html
      register: new_instance

    - name: Add new instance to Host group
      add_host:
        hostname: "{{ item.public_ip }}"
        group: new_instances
      with_items: "{{ new_instance.instances }}"